using Dates, DataFrames, Test, BenchmarkTools
include("./../../Main.jl")
include("./../../NodeProcessors/SortNode.jl")
include("./../BenchmarkTimes.jl")
# include("./../../BacktestUtils/ErrorHandlers.jl")
using Main.VectoriseBacktestService
using ..VectoriseBacktestService.Types
using .VectoriseBacktestService.GlobalServerCache
using ..SortNode
initialize_server_cache()

@testset "Sort Node Test 1" begin
    sort_node::Dict{String,Any} = Dict{String,Any}(
        "id" => "fdbac0b79476fe65cec8a7326ed271d0",
        "componentType" => "switch",
        "type" => "Sort",
        "name" => "SortBy: 1d Exponential Moving Average of Price",
        "properties" => Dict{String,Any}(
            "sortby" => Dict{String,Any}(
                "function" => "Exponential Moving Average of Price", "window" => "1"
            ),
            "select" => Dict{String,Any}("function" => "Top", "howmany" => "2"),
            "isInvalid" => false,
        ),
        "branches" => Dict{String,Any}(
            "Top-2" => [
                Dict{String,Any}(
                    "id" => "11a431a86d771d877810c6ce39b54778",
                    "componentType" => "largeTask",
                    "type" => "stock",
                    "name" => "BUY AAPL",
                    "properties" => Dict{String,Any}("symbol" => "AAPL"),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                ),
                Dict{String,Any}(
                    "id" => "6f904f5a658eb8aadbb4b8b29ba27deb",
                    "componentType" => "largeTask",
                    "type" => "stock",
                    "name" => "BUY QQQ",
                    "properties" => Dict{String,Any}("symbol" => "QQQ"),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                ),
                Dict{String,Any}(
                    "id" => "b060079b5b9c5483e29753b3e98fa26f",
                    "componentType" => "largeTask",
                    "type" => "stock",
                    "name" => "BUY TSLA",
                    "properties" => Dict{String,Any}("symbol" => "TSLA"),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                ),
                Dict{String,Any}(
                    "id" => "bdeaf63e38b76064943d6d19b13ff528",
                    "componentType" => "icon",
                    "name" => "Interrupting icon",
                    "properties" => Dict{String,Any}(),
                    "type" => "icon",
                ),
            ],
        ),
        "parentHash" => "b4b147bc522828731f1a016bfa72c073",
        "nodeChildrenHash" => "504f65cb03706e74d4f0e144cafa23db",
    )

    active_branch_mask::BitVector = BitVector(trues(250))
    total_days::Int = 250
    daily_weight::Float32 = 1.0f0
    portfolio_history::Vector{DayData} = [DayData() for _ in 1:250]
    date_range::Vector{String} = [
        "2023-06-02",
        "2023-06-05",
        "2023-06-06",
        "2023-06-07",
        "2023-06-08",
        "2023-06-09",
        "2023-06-12",
        "2023-06-13",
        "2023-06-14",
        "2023-06-15",
        "2023-06-16",
        "2023-06-20",
        "2023-06-21",
        "2023-06-22",
        "2023-06-23",
        "2023-06-26",
        "2023-06-27",
        "2023-06-28",
        "2023-06-29",
        "2023-06-30",
        "2023-07-03",
        "2023-07-05",
        "2023-07-06",
        "2023-07-07",
        "2023-07-10",
        "2023-07-11",
        "2023-07-12",
        "2023-07-13",
        "2023-07-14",
        "2023-07-17",
        "2023-07-18",
        "2023-07-19",
        "2023-07-20",
        "2023-07-21",
        "2023-07-24",
        "2023-07-25",
        "2023-07-26",
        "2023-07-27",
        "2023-07-28",
        "2023-07-31",
        "2023-08-01",
        "2023-08-02",
        "2023-08-03",
        "2023-08-04",
        "2023-08-07",
        "2023-08-08",
        "2023-08-09",
        "2023-08-10",
        "2023-08-11",
        "2023-08-14",
        "2023-08-15",
        "2023-08-16",
        "2023-08-17",
        "2023-08-18",
        "2023-08-21",
        "2023-08-22",
        "2023-08-23",
        "2023-08-24",
        "2023-08-25",
        "2023-08-28",
        "2023-08-29",
        "2023-08-30",
        "2023-08-31",
        "2023-09-01",
        "2023-09-05",
        "2023-09-06",
        "2023-09-07",
        "2023-09-08",
        "2023-09-11",
        "2023-09-12",
        "2023-09-13",
        "2023-09-14",
        "2023-09-15",
        "2023-09-18",
        "2023-09-19",
        "2023-09-20",
        "2023-09-21",
        "2023-09-22",
        "2023-09-25",
        "2023-09-26",
        "2023-09-27",
        "2023-09-28",
        "2023-09-29",
        "2023-10-02",
        "2023-10-03",
        "2023-10-04",
        "2023-10-05",
        "2023-10-06",
        "2023-10-09",
        "2023-10-10",
        "2023-10-11",
        "2023-10-12",
        "2023-10-13",
        "2023-10-16",
        "2023-10-17",
        "2023-10-18",
        "2023-10-19",
        "2023-10-20",
        "2023-10-23",
        "2023-10-24",
        "2023-10-25",
        "2023-10-26",
        "2023-10-27",
        "2023-10-30",
        "2023-10-31",
        "2023-11-01",
        "2023-11-02",
        "2023-11-03",
        "2023-11-06",
        "2023-11-07",
        "2023-11-08",
        "2023-11-09",
        "2023-11-10",
        "2023-11-13",
        "2023-11-14",
        "2023-11-15",
        "2023-11-16",
        "2023-11-17",
        "2023-11-20",
        "2023-11-21",
        "2023-11-22",
        "2023-11-24",
        "2023-11-27",
        "2023-11-28",
        "2023-11-29",
        "2023-11-30",
        "2023-12-01",
        "2023-12-04",
        "2023-12-05",
        "2023-12-06",
        "2023-12-07",
        "2023-12-08",
        "2023-12-11",
        "2023-12-12",
        "2023-12-13",
        "2023-12-14",
        "2023-12-15",
        "2023-12-18",
        "2023-12-19",
        "2023-12-20",
        "2023-12-21",
        "2023-12-22",
        "2023-12-26",
        "2023-12-27",
        "2023-12-28",
        "2023-12-29",
        "2024-01-02",
        "2024-01-03",
        "2024-01-04",
        "2024-01-05",
        "2024-01-08",
        "2024-01-09",
        "2024-01-10",
        "2024-01-11",
        "2024-01-12",
        "2024-01-16",
        "2024-01-17",
        "2024-01-18",
        "2024-01-19",
        "2024-01-22",
        "2024-01-23",
        "2024-01-24",
        "2024-01-25",
        "2024-01-26",
        "2024-01-29",
        "2024-01-30",
        "2024-01-31",
        "2024-02-01",
        "2024-02-02",
        "2024-02-05",
        "2024-02-06",
        "2024-02-07",
        "2024-02-08",
        "2024-02-09",
        "2024-02-12",
        "2024-02-13",
        "2024-02-14",
        "2024-02-15",
        "2024-02-16",
        "2024-02-20",
        "2024-02-21",
        "2024-02-22",
        "2024-02-23",
        "2024-02-26",
        "2024-02-27",
        "2024-02-28",
        "2024-02-29",
        "2024-03-01",
        "2024-03-04",
        "2024-03-05",
        "2024-03-06",
        "2024-03-07",
        "2024-03-08",
        "2024-03-11",
        "2024-03-12",
        "2024-03-13",
        "2024-03-14",
        "2024-03-15",
        "2024-03-18",
        "2024-03-19",
        "2024-03-20",
        "2024-03-21",
        "2024-03-22",
        "2024-03-25",
        "2024-03-26",
        "2024-03-27",
        "2024-03-28",
        "2024-04-01",
        "2024-04-02",
        "2024-04-03",
        "2024-04-04",
        "2024-04-05",
        "2024-04-08",
        "2024-04-09",
        "2024-04-10",
        "2024-04-11",
        "2024-04-12",
        "2024-04-15",
        "2024-04-16",
        "2024-04-17",
        "2024-04-18",
        "2024-04-19",
        "2024-04-22",
        "2024-04-23",
        "2024-04-24",
        "2024-04-25",
        "2024-04-26",
        "2024-04-29",
        "2024-04-30",
        "2024-05-01",
        "2024-05-02",
        "2024-05-03",
        "2024-05-06",
        "2024-05-07",
        "2024-05-08",
        "2024-05-09",
        "2024-05-10",
        "2024-05-13",
        "2024-05-14",
        "2024-05-15",
        "2024-05-16",
        "2024-05-17",
        "2024-05-20",
        "2024-05-21",
        "2024-05-22",
        "2024-05-23",
        "2024-05-24",
        "2024-05-28",
        "2024-05-29",
        "2024-05-30",
    ]
    end_date::Date = Date("2024-05-30")
    flow_count::Dict{String,Int} = Dict{String,Int}()
    flow_stocks::Dict{String,Vector{DayData}} = Dict{String,Vector{DayData}}()
    indicator_cache::Dict{String,Vector{Float32}} = Dict{String,Vector{Float32}}()
    price_cache::Dict{String,DataFrame} = Dict{String,DataFrame}()

    result = process_sort_node(
        sort_node,
        active_branch_mask,
        total_days,
        daily_weight,
        portfolio_history,
        date_range,
        end_date,
        flow_count,
        flow_stocks,
        indicator_cache,
        price_cache,
        Dict{String,Any}(),
        false,
        0,
    )

    expected_result::Int = 249

    @test result == expected_result
    expected_profile_history::Vector{DayData} = DayData[
        DayData(StockInfo[]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("TSLA", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 0.5f0), StockInfo("AAPL", 0.5f0)]),
    ]

    for i in 1:250
        @test expected_profile_history[i] == portfolio_history[i]
    end

    timing_data = @benchmark process_sort_node(
        $sort_node,
        $active_branch_mask,
        $total_days,
        $daily_weight,
        $portfolio_history,
        $date_range,
        $end_date,
        $flow_count,
        $flow_stocks,
        $indicator_cache,
        $price_cache,
        Dict{String,Any}(),
        false,
        0,
    )
    min_time = minimum(timing_data).time * 1e-9
    range = get_range(MIN_SORT_NODE)
    @test MIN_SORT_NODE - range <= min_time <= MIN_SORT_NODE + range
    println("Minimum time taken for Sort Node: ", min_time, " seconds")
end

@testset "Sort Node Test 2" begin
    sort_node::Dict{String,Any} = Dict{String,Any}(
        "id" => "a1b121690d4f284bec769a9c809147a3",
        "componentType" => "switch",
        "type" => "Sort",
        "name" => "SortBy: 2d Moving Average of Return",
        "properties" => Dict{String,Any}(
            "sortby" => Dict{String,Any}(
                "function" => "Moving Average of Return", "window" => "2"
            ),
            "select" => Dict{String,Any}("function" => "Bottom", "howmany" => "1"),
            "isInvalid" => false,
        ),
        "branches" => Dict{String,Any}(
            "Bottom-1" => [
                Dict{String,Any}(
                    "id" => "5b11e2cf3f06ebf3f69c7cf6cbf9ecce",
                    "componentType" => "largeTask",
                    "type" => "stock",
                    "name" => "BUY QQQ",
                    "properties" => Dict{String,Any}("symbol" => "QQQ"),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                ),
                Dict{String,Any}(
                    "id" => "6c1b4160b75374e24f2434c4dd2c1a63",
                    "componentType" => "folder",
                    "type" => "folder",
                    "name" => "folder1",
                    "sequence" => [
                        Dict{String,Any}(
                            "id" => "a4ecb7ffe13ba8cbba55d8944e88d234",
                            "componentType" => "switch",
                            "type" => "Sort",
                            "name" => "SortBy: 1d Max Drawdown",
                            "properties" => Dict{String,Any}(
                                "sortby" => Dict{String,Any}(
                                    "function" => "Max Drawdown",
                                    "window" => "1",
                                ),
                                "select" => Dict{String,Any}(
                                    "function" => "Top",
                                    "howmany" => "2",
                                ),
                            ),
                            "branches" => Dict{String,Any}(
                                "Top-2" => [
                                    Dict{String,Any}(
                                        "id" => "d9611fbbfaecc77591d05aa9c7a4d4e7",
                                        "componentType" => "largeTask",
                                        "type" => "stock",
                                        "name" => "BUY AAPL",
                                        "properties" =>
                                            Dict{String,Any}("symbol" => "AAPL"),
                                        "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                    ),
                                    Dict{String,Any}(
                                        "id" => "490478863353f06d953512688c850462",
                                        "componentType" => "largeTask",
                                        "type" => "stock",
                                        "name" => "BUY SPY",
                                        "properties" =>
                                            Dict{String,Any}(
                                                "isInvalid" => false,
                                                "symbol" => "SPY",
                                            ),
                                        "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                    ),
                                    Dict{String,Any}(
                                        "id" => "bf86ea2053858cb854ca36c163aa5ef8",
                                        "componentType" => "largeTask",
                                        "type" => "stock",
                                        "name" => "BUY TSLA",
                                        "properties" =>
                                            Dict{String,Any}("symbol" => "TSLA"),
                                        "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                    ),
                                    Dict{String,Any}(
                                        "id" => "c2bea346b9b61366a259c12df00dde56",
                                        "componentType" => "icon",
                                        "name" => "Interrupting icon",
                                        "properties" => Dict{String,Any}(),
                                        "type" => "icon",
                                    ),
                                ],
                            ),
                            "parentHash" => "ef58bc0f50b6c6a9232f8219fa7e7def",
                            "nodeChildrenHash" => "53967993f1baf6899f139041dd71ff89",
                        ),
                    ],
                    "properties" => Dict{String,Any}(
                        "isCloudFolder" => false,
                        "folder_id" => "",
                        "author_id" => "",
                        "author_history" => Dict{String,Any}(),
                    ),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                    "nodeChildrenHash" => "747ae5130a08022b284557546aa20571",
                ),
                Dict{String,Any}(
                    "id" => "0d7baf1b2e6a41ec4f893740256fdf6f",
                    "componentType" => "icon",
                    "name" => "Interrupting icon",
                    "properties" => Dict{String,Any}(),
                    "type" => "icon",
                ),
            ],
        ),
        "parentHash" => "b4b147bc522828731f1a016bfa72c073",
        "nodeChildrenHash" => "224a758c1783013655940e4082140e0f",
    )

    active_branch_mask::BitVector = BitVector(trues(250))
    total_days::Int = 250
    daily_weight::Float32 = 1.0f0
    portfolio_history::Vector{DayData} = [DayData() for _ in 1:250]
    date_range::Vector{String} = [
        "2023-06-02",
        "2023-06-05",
        "2023-06-06",
        "2023-06-07",
        "2023-06-08",
        "2023-06-09",
        "2023-06-12",
        "2023-06-13",
        "2023-06-14",
        "2023-06-15",
        "2023-06-16",
        "2023-06-20",
        "2023-06-21",
        "2023-06-22",
        "2023-06-23",
        "2023-06-26",
        "2023-06-27",
        "2023-06-28",
        "2023-06-29",
        "2023-06-30",
        "2023-07-03",
        "2023-07-05",
        "2023-07-06",
        "2023-07-07",
        "2023-07-10",
        "2023-07-11",
        "2023-07-12",
        "2023-07-13",
        "2023-07-14",
        "2023-07-17",
        "2023-07-18",
        "2023-07-19",
        "2023-07-20",
        "2023-07-21",
        "2023-07-24",
        "2023-07-25",
        "2023-07-26",
        "2023-07-27",
        "2023-07-28",
        "2023-07-31",
        "2023-08-01",
        "2023-08-02",
        "2023-08-03",
        "2023-08-04",
        "2023-08-07",
        "2023-08-08",
        "2023-08-09",
        "2023-08-10",
        "2023-08-11",
        "2023-08-14",
        "2023-08-15",
        "2023-08-16",
        "2023-08-17",
        "2023-08-18",
        "2023-08-21",
        "2023-08-22",
        "2023-08-23",
        "2023-08-24",
        "2023-08-25",
        "2023-08-28",
        "2023-08-29",
        "2023-08-30",
        "2023-08-31",
        "2023-09-01",
        "2023-09-05",
        "2023-09-06",
        "2023-09-07",
        "2023-09-08",
        "2023-09-11",
        "2023-09-12",
        "2023-09-13",
        "2023-09-14",
        "2023-09-15",
        "2023-09-18",
        "2023-09-19",
        "2023-09-20",
        "2023-09-21",
        "2023-09-22",
        "2023-09-25",
        "2023-09-26",
        "2023-09-27",
        "2023-09-28",
        "2023-09-29",
        "2023-10-02",
        "2023-10-03",
        "2023-10-04",
        "2023-10-05",
        "2023-10-06",
        "2023-10-09",
        "2023-10-10",
        "2023-10-11",
        "2023-10-12",
        "2023-10-13",
        "2023-10-16",
        "2023-10-17",
        "2023-10-18",
        "2023-10-19",
        "2023-10-20",
        "2023-10-23",
        "2023-10-24",
        "2023-10-25",
        "2023-10-26",
        "2023-10-27",
        "2023-10-30",
        "2023-10-31",
        "2023-11-01",
        "2023-11-02",
        "2023-11-03",
        "2023-11-06",
        "2023-11-07",
        "2023-11-08",
        "2023-11-09",
        "2023-11-10",
        "2023-11-13",
        "2023-11-14",
        "2023-11-15",
        "2023-11-16",
        "2023-11-17",
        "2023-11-20",
        "2023-11-21",
        "2023-11-22",
        "2023-11-24",
        "2023-11-27",
        "2023-11-28",
        "2023-11-29",
        "2023-11-30",
        "2023-12-01",
        "2023-12-04",
        "2023-12-05",
        "2023-12-06",
        "2023-12-07",
        "2023-12-08",
        "2023-12-11",
        "2023-12-12",
        "2023-12-13",
        "2023-12-14",
        "2023-12-15",
        "2023-12-18",
        "2023-12-19",
        "2023-12-20",
        "2023-12-21",
        "2023-12-22",
        "2023-12-26",
        "2023-12-27",
        "2023-12-28",
        "2023-12-29",
        "2024-01-02",
        "2024-01-03",
        "2024-01-04",
        "2024-01-05",
        "2024-01-08",
        "2024-01-09",
        "2024-01-10",
        "2024-01-11",
        "2024-01-12",
        "2024-01-16",
        "2024-01-17",
        "2024-01-18",
        "2024-01-19",
        "2024-01-22",
        "2024-01-23",
        "2024-01-24",
        "2024-01-25",
        "2024-01-26",
        "2024-01-29",
        "2024-01-30",
        "2024-01-31",
        "2024-02-01",
        "2024-02-02",
        "2024-02-05",
        "2024-02-06",
        "2024-02-07",
        "2024-02-08",
        "2024-02-09",
        "2024-02-12",
        "2024-02-13",
        "2024-02-14",
        "2024-02-15",
        "2024-02-16",
        "2024-02-20",
        "2024-02-21",
        "2024-02-22",
        "2024-02-23",
        "2024-02-26",
        "2024-02-27",
        "2024-02-28",
        "2024-02-29",
        "2024-03-01",
        "2024-03-04",
        "2024-03-05",
        "2024-03-06",
        "2024-03-07",
        "2024-03-08",
        "2024-03-11",
        "2024-03-12",
        "2024-03-13",
        "2024-03-14",
        "2024-03-15",
        "2024-03-18",
        "2024-03-19",
        "2024-03-20",
        "2024-03-21",
        "2024-03-22",
        "2024-03-25",
        "2024-03-26",
        "2024-03-27",
        "2024-03-28",
        "2024-04-01",
        "2024-04-02",
        "2024-04-03",
        "2024-04-04",
        "2024-04-05",
        "2024-04-08",
        "2024-04-09",
        "2024-04-10",
        "2024-04-11",
        "2024-04-12",
        "2024-04-15",
        "2024-04-16",
        "2024-04-17",
        "2024-04-18",
        "2024-04-19",
        "2024-04-22",
        "2024-04-23",
        "2024-04-24",
        "2024-04-25",
        "2024-04-26",
        "2024-04-29",
        "2024-04-30",
        "2024-05-01",
        "2024-05-02",
        "2024-05-03",
        "2024-05-06",
        "2024-05-07",
        "2024-05-08",
        "2024-05-09",
        "2024-05-10",
        "2024-05-13",
        "2024-05-14",
        "2024-05-15",
        "2024-05-16",
        "2024-05-17",
        "2024-05-20",
        "2024-05-21",
        "2024-05-22",
        "2024-05-23",
        "2024-05-24",
        "2024-05-28",
        "2024-05-29",
        "2024-05-30",
    ]
    end_date::Date = Date("2024-05-30")
    flow_count::Dict{String,Int} = Dict{String,Int}()
    flow_stocks::Dict{String,Vector{DayData}} = Dict{String,Vector{DayData}}()
    indicator_cache::Dict{String,Vector{Float32}} = Dict{String,Vector{Float32}}()
    price_cache::Dict{String,DataFrame} = Dict{String,DataFrame}()

    result = process_sort_node(
        sort_node,
        active_branch_mask,
        total_days,
        daily_weight,
        portfolio_history,
        date_range,
        end_date,
        flow_count,
        flow_stocks,
        indicator_cache,
        price_cache,
        Dict{String,Any}(),
        false,
        0,
    )

    expected_result::Int = 247

    @test result == expected_result
    expected_profile_history::Vector{DayData} = DayData[
        DayData(StockInfo[]),
        DayData(StockInfo[]),
        DayData(StockInfo[]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("AAPL", 0.5f0), StockInfo("SPY", 0.5f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("QQQ", 1.0f0)]),
    ]
    for i in 1:250
        @test expected_profile_history[i] == portfolio_history[i]
    end

    timing_data = @benchmark process_sort_node(
        $sort_node,
        $active_branch_mask,
        $total_days,
        $daily_weight,
        $portfolio_history,
        $date_range,
        $end_date,
        $flow_count,
        $flow_stocks,
        $indicator_cache,
        $price_cache,
        Dict{String,Any}(),
        false,
        0,
    )
    min_time = minimum(timing_data).time * 1e-9
    range = get_range(MIN_SORT_NODE_SYNTHETIC_RETURNS)
    @test MIN_SORT_NODE_SYNTHETIC_RETURNS - range <=
        min_time <=
        MIN_SORT_NODE_SYNTHETIC_RETURNS + range
    println("Minimum time taken for Sort Node: ", min_time, " seconds")
end

@testset "Sort Node Test 3" begin
    sort_node::Dict{String,Any} = Dict{String,Any}(
        "id" => "a1b121690d4f284bec769a9c809147a3",
        "componentType" => "switch",
        "type" => "Sort",
        "name" => "SortBy: 1d Standard Deviation of Return",
        "properties" => Dict{String,Any}(
            "sortby" => Dict{String,Any}(
                "function" => "Standard Deviation of Return", "window" => "1"
            ),
            "select" => Dict{String,Any}("function" => "Top", "howmany" => "1"),
            "isInvalid" => false,
        ),
        "branches" => Dict{String,Any}(
            "Top-1" => [
                Dict{String,Any}(
                    "id" => "5b11e2cf3f06ebf3f69c7cf6cbf9ecce",
                    "componentType" => "largeTask",
                    "type" => "stock",
                    "name" => "BUY TQQQ",
                    "properties" =>
                        Dict{String,Any}("symbol" => "TQQQ", "isInvalid" => false),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                ),
                Dict{String,Any}(
                    "id" => "6c1b4160b75374e24f2434c4dd2c1a63",
                    "componentType" => "folder",
                    "type" => "folder",
                    "name" => "folder1",
                    "sequence" => [
                        Dict{String,Any}(
                            "id" => "a4ecb7ffe13ba8cbba55d8944e88d234",
                            "componentType" => "switch",
                            "type" => "Sort",
                            "name" => "SortBy: 1d Relative Strength Index",
                            "properties" => Dict{String,Any}(
                                "sortby" => Dict{String,Any}(
                                    "function" => "Relative Strength Index",
                                    "window" => "1",
                                ),
                                "select" => Dict{String,Any}(
                                    "function" => "Bottom",
                                    "howmany" => "1",
                                ),
                                "isInvalid" => false,
                            ),
                            "branches" => Dict{String,Any}(
                                "Bottom-1" => [
                                    Dict{String,Any}(
                                        "id" => "d9611fbbfaecc77591d05aa9c7a4d4e7",
                                        "componentType" => "largeTask",
                                        "type" => "stock",
                                        "name" => "BUY KLAC",
                                        "properties" =>
                                            Dict{String,Any}(
                                                "symbol" => "KLAC",
                                                "isInvalid" => false,
                                            ),
                                        "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                    ),
                                    Dict{String,Any}(
                                        "id" => "490478863353f06d953512688c850462",
                                        "componentType" => "largeTask",
                                        "type" => "stock",
                                        "name" => "BUY QQQ",
                                        "properties" =>
                                            Dict{String,Any}(
                                                "symbol" => "QQQ",
                                                "isInvalid" => false,
                                            ),
                                        "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                    ),
                                    Dict{String,Any}(
                                        "id" => "bf86ea2053858cb854ca36c163aa5ef8",
                                        "componentType" => "largeTask",
                                        "type" => "stock",
                                        "name" => "BUY TSLA",
                                        "properties" =>
                                            Dict{String,Any}("symbol" => "TSLA"),
                                        "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                    ),
                                    Dict{String,Any}(
                                        "id" => "c2bea346b9b61366a259c12df00dde56",
                                        "componentType" => "icon",
                                        "name" => "Interrupting icon",
                                        "properties" => Dict{String,Any}(),
                                        "type" => "icon",
                                    ),
                                ],
                            ),
                            "parentHash" => "ef58bc0f50b6c6a9232f8219fa7e7def",
                            "nodeChildrenHash" => "6787ca9df67bf12f19c732f5ac3205f2",
                        ),
                    ],
                    "properties" => Dict{String,Any}(
                        "isCloudFolder" => false,
                        "folder_id" => "",
                        "author_id" => "",
                        "author_history" => Dict{String,Any}(),
                    ),
                    "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                    "nodeChildrenHash" => "747ae5130a08022b284557546aa20571",
                ),
                Dict{String,Any}(
                    "id" => "0d7baf1b2e6a41ec4f893740256fdf6f",
                    "componentType" => "icon",
                    "name" => "Interrupting icon",
                    "properties" => Dict{String,Any}(),
                    "type" => "icon",
                ),
            ],
        ),
        "parentHash" => "b4b147bc522828731f1a016bfa72c073",
        "nodeChildrenHash" => "7351f23af363ab4ae006523295d605df",
    )

    active_branch_mask::BitVector = BitVector(trues(250))
    total_days::Int = 250
    daily_weight::Float32 = 1.0f0
    portfolio_history::Vector{DayData} = [DayData() for _ in 1:250]
    date_range::Vector{String} = [
        "2023-06-02",
        "2023-06-05",
        "2023-06-06",
        "2023-06-07",
        "2023-06-08",
        "2023-06-09",
        "2023-06-12",
        "2023-06-13",
        "2023-06-14",
        "2023-06-15",
        "2023-06-16",
        "2023-06-20",
        "2023-06-21",
        "2023-06-22",
        "2023-06-23",
        "2023-06-26",
        "2023-06-27",
        "2023-06-28",
        "2023-06-29",
        "2023-06-30",
        "2023-07-03",
        "2023-07-05",
        "2023-07-06",
        "2023-07-07",
        "2023-07-10",
        "2023-07-11",
        "2023-07-12",
        "2023-07-13",
        "2023-07-14",
        "2023-07-17",
        "2023-07-18",
        "2023-07-19",
        "2023-07-20",
        "2023-07-21",
        "2023-07-24",
        "2023-07-25",
        "2023-07-26",
        "2023-07-27",
        "2023-07-28",
        "2023-07-31",
        "2023-08-01",
        "2023-08-02",
        "2023-08-03",
        "2023-08-04",
        "2023-08-07",
        "2023-08-08",
        "2023-08-09",
        "2023-08-10",
        "2023-08-11",
        "2023-08-14",
        "2023-08-15",
        "2023-08-16",
        "2023-08-17",
        "2023-08-18",
        "2023-08-21",
        "2023-08-22",
        "2023-08-23",
        "2023-08-24",
        "2023-08-25",
        "2023-08-28",
        "2023-08-29",
        "2023-08-30",
        "2023-08-31",
        "2023-09-01",
        "2023-09-05",
        "2023-09-06",
        "2023-09-07",
        "2023-09-08",
        "2023-09-11",
        "2023-09-12",
        "2023-09-13",
        "2023-09-14",
        "2023-09-15",
        "2023-09-18",
        "2023-09-19",
        "2023-09-20",
        "2023-09-21",
        "2023-09-22",
        "2023-09-25",
        "2023-09-26",
        "2023-09-27",
        "2023-09-28",
        "2023-09-29",
        "2023-10-02",
        "2023-10-03",
        "2023-10-04",
        "2023-10-05",
        "2023-10-06",
        "2023-10-09",
        "2023-10-10",
        "2023-10-11",
        "2023-10-12",
        "2023-10-13",
        "2023-10-16",
        "2023-10-17",
        "2023-10-18",
        "2023-10-19",
        "2023-10-20",
        "2023-10-23",
        "2023-10-24",
        "2023-10-25",
        "2023-10-26",
        "2023-10-27",
        "2023-10-30",
        "2023-10-31",
        "2023-11-01",
        "2023-11-02",
        "2023-11-03",
        "2023-11-06",
        "2023-11-07",
        "2023-11-08",
        "2023-11-09",
        "2023-11-10",
        "2023-11-13",
        "2023-11-14",
        "2023-11-15",
        "2023-11-16",
        "2023-11-17",
        "2023-11-20",
        "2023-11-21",
        "2023-11-22",
        "2023-11-24",
        "2023-11-27",
        "2023-11-28",
        "2023-11-29",
        "2023-11-30",
        "2023-12-01",
        "2023-12-04",
        "2023-12-05",
        "2023-12-06",
        "2023-12-07",
        "2023-12-08",
        "2023-12-11",
        "2023-12-12",
        "2023-12-13",
        "2023-12-14",
        "2023-12-15",
        "2023-12-18",
        "2023-12-19",
        "2023-12-20",
        "2023-12-21",
        "2023-12-22",
        "2023-12-26",
        "2023-12-27",
        "2023-12-28",
        "2023-12-29",
        "2024-01-02",
        "2024-01-03",
        "2024-01-04",
        "2024-01-05",
        "2024-01-08",
        "2024-01-09",
        "2024-01-10",
        "2024-01-11",
        "2024-01-12",
        "2024-01-16",
        "2024-01-17",
        "2024-01-18",
        "2024-01-19",
        "2024-01-22",
        "2024-01-23",
        "2024-01-24",
        "2024-01-25",
        "2024-01-26",
        "2024-01-29",
        "2024-01-30",
        "2024-01-31",
        "2024-02-01",
        "2024-02-02",
        "2024-02-05",
        "2024-02-06",
        "2024-02-07",
        "2024-02-08",
        "2024-02-09",
        "2024-02-12",
        "2024-02-13",
        "2024-02-14",
        "2024-02-15",
        "2024-02-16",
        "2024-02-20",
        "2024-02-21",
        "2024-02-22",
        "2024-02-23",
        "2024-02-26",
        "2024-02-27",
        "2024-02-28",
        "2024-02-29",
        "2024-03-01",
        "2024-03-04",
        "2024-03-05",
        "2024-03-06",
        "2024-03-07",
        "2024-03-08",
        "2024-03-11",
        "2024-03-12",
        "2024-03-13",
        "2024-03-14",
        "2024-03-15",
        "2024-03-18",
        "2024-03-19",
        "2024-03-20",
        "2024-03-21",
        "2024-03-22",
        "2024-03-25",
        "2024-03-26",
        "2024-03-27",
        "2024-03-28",
        "2024-04-01",
        "2024-04-02",
        "2024-04-03",
        "2024-04-04",
        "2024-04-05",
        "2024-04-08",
        "2024-04-09",
        "2024-04-10",
        "2024-04-11",
        "2024-04-12",
        "2024-04-15",
        "2024-04-16",
        "2024-04-17",
        "2024-04-18",
        "2024-04-19",
        "2024-04-22",
        "2024-04-23",
        "2024-04-24",
        "2024-04-25",
        "2024-04-26",
        "2024-04-29",
        "2024-04-30",
        "2024-05-01",
        "2024-05-02",
        "2024-05-03",
        "2024-05-06",
        "2024-05-07",
        "2024-05-08",
        "2024-05-09",
        "2024-05-10",
        "2024-05-13",
        "2024-05-14",
        "2024-05-15",
        "2024-05-16",
        "2024-05-17",
        "2024-05-20",
        "2024-05-21",
        "2024-05-22",
        "2024-05-23",
        "2024-05-24",
        "2024-05-28",
        "2024-05-29",
        "2024-05-30",
    ]
    end_date::Date = Date("2024-05-30")
    flow_count::Dict{String,Int} = Dict{String,Int}()
    flow_stocks::Dict{String,Vector{DayData}} = Dict{String,Vector{DayData}}()
    indicator_cache::Dict{String,Vector{Float32}} = Dict{String,Vector{Float32}}()
    price_cache::Dict{String,DataFrame} = Dict{String,DataFrame}()

    result = process_sort_node(
        sort_node,
        active_branch_mask,
        total_days,
        daily_weight,
        portfolio_history,
        date_range,
        end_date,
        flow_count,
        flow_stocks,
        indicator_cache,
        price_cache,
        Dict{String,Any}(),
        false,
        0,
    )

    expected_result::Int = 248

    @test result == expected_result
    expected_profile_history::Vector{DayData} = DayData[
        DayData(StockInfo[]),
        DayData(StockInfo[]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
        DayData(StockInfo[StockInfo("TQQQ", 1.0f0)]),
    ]

    for i in 1:250
        @test expected_profile_history[i] == portfolio_history[i]
    end

    timing_data = @benchmark process_sort_node(
        $sort_node,
        $active_branch_mask,
        $total_days,
        $daily_weight,
        $portfolio_history,
        $date_range,
        $end_date,
        $flow_count,
        $flow_stocks,
        $indicator_cache,
        $price_cache,
        Dict{String,Any}(),
        false,
        0,
    )
    min_time = minimum(timing_data).time * 1e-9
    range = get_range(MIN_SORT_NODE_SYNTHETIC_RETURNS)
    @test MIN_SORT_NODE_SYNTHETIC_RETURNS - range <=
        min_time <=
        MIN_SORT_NODE_SYNTHETIC_RETURNS + range
    println("Minimum time taken for Sort Node: ", min_time, " seconds")
end

@testset "Sort Node Error Tests" begin
    @testset "Sort Node Error Test 1" begin
        sort_node::Dict{String,Any} = Dict{String,Any}(
            "id" => "a1b121690d4f284bec769a9c809147a3",
            "componentType" => "switch",
            "type" => "Sort",
            "name" => "SortBy: 1d Standard Deviation of Return",
            "properties" => Dict{String,Any}(
                "sortby" => Dict{String,Any}(
                    "function" => "Standard Deviation of Return", "window" => "1"
                ),
                "select" => Dict{String,Any}("function" => "Top", "howmany" => ""),
                "isInvalid" => false,
            ),
            "branches" => Dict{String,Any}(
                "Top-1" => [
                    Dict{String,Any}(
                        "id" => "5b11e2cf3f06ebf3f69c7cf6cbf9ecce",
                        "componentType" => "largeTask",
                        "type" => "stock",
                        "name" => "BUY TQQQ",
                        "properties" => Dict{String,Any}(
                            "symbol" => "TQQQ", "isInvalid" => false
                        ),
                        "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                    ),
                    Dict{String,Any}(
                        "id" => "6c1b4160b75374e24f2434c4dd2c1a63",
                        "componentType" => "folder",
                        "type" => "folder",
                        "name" => "folder1",
                        "sequence" => [
                            Dict{String,Any}(
                                "id" => "a4ecb7ffe13ba8cbba55d8944e88d234",
                                "componentType" => "switch",
                                "type" => "Sort",
                                "name" => "SortBy: 0d Relative Strength Index",
                                "properties" => Dict{String,Any}(
                                    "sortby" => Dict{String,Any}(
                                        "function" => "Relative Strength Index",
                                        "window" => "0",
                                    ),
                                    "select" => Dict{String,Any}(
                                        "function" => "Botton",
                                        "howmany" => "1",
                                    ),
                                    "isInvalid" => false,
                                ),
                                "branches" => Dict{String,Any}(
                                    "Bottom-1" => [
                                        Dict{String,Any}(
                                            "id" => "d9611fbbfaecc77591d05aa9c7a4d4e7",
                                            "componentType" => "largeTask",
                                            "type" => "stock",
                                            "name" => "BUY KLAC",
                                            "properties" =>
                                                Dict{String,Any}(
                                                    "symbol" => "KLAC",
                                                    "isInvalid" => false,
                                                ),
                                            "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                        ),
                                        Dict{String,Any}(
                                            "id" => "490478863353f06d953512688c850462",
                                            "componentType" => "largeTask",
                                            "type" => "stock",
                                            "name" => "BUY QQQ",
                                            "properties" =>
                                                Dict{String,Any}(
                                                    "symbol" => "QQQ",
                                                    "isInvalid" => false,
                                                ),
                                            "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                        ),
                                        Dict{String,Any}(
                                            "id" => "bf86ea2053858cb854ca36c163aa5ef8",
                                            "componentType" => "largeTask",
                                            "type" => "stock",
                                            "name" => "BUY TSLA",
                                            "properties" =>
                                                Dict{String,Any}("symbol" => "TSLA"),
                                            "parentHash" => "b9ec77159db6f61ca00737cc18d28a13",
                                        ),
                                        Dict{String,Any}(
                                            "id" => "c2bea346b9b61366a259c12df00dde56",
                                            "componentType" => "icon",
                                            "name" => "Interrupting icon",
                                            "properties" => Dict{String,Any}(),
                                            "type" => "icon",
                                        ),
                                    ],
                                ),
                                "parentHash" => "ef58bc0f50b6c6a9232f8219fa7e7def",
                                "nodeChildrenHash" => "6787ca9df67bf12f19c732f5ac3205f2",
                            ),
                        ],
                        "properties" => Dict{String,Any}(
                            "isCloudFolder" => false,
                            "folder_id" => "",
                            "author_id" => "",
                            "author_history" => Dict{String,Any}(),
                        ),
                        "parentHash" => "6ef078c51205d98c11a33f6ac5835037",
                        "nodeChildrenHash" => "747ae5130a08022b284557546aa20571",
                    ),
                    Dict{String,Any}(
                        "id" => "0d7baf1b2e6a41ec4f893740256fdf6f",
                        "componentType" => "icon",
                        "name" => "Interrupting icon",
                        "properties" => Dict{String,Any}(),
                        "type" => "icon",
                    ),
                ],
            ),
            "parentHash" => "b4b147bc522828731f1a016bfa72c073",
            "nodeChildrenHash" => "7351f23af363ab4ae006523295d605df",
        )

        active_branch_mask::BitVector = BitVector(trues(250))
        total_days::Int = 250
        daily_weight::Float32 = 1.0f0
        portfolio_history::Vector{DayData} = [DayData() for _ in 1:250]
        date_range::Vector{String} = [
            "2023-06-02",
            "2023-06-05",
            "2023-06-06",
            "2023-06-07",
            "2023-06-08",
            "2023-06-09",
            "2023-06-12",
            "2023-06-13",
            "2023-06-14",
            "2023-06-15",
            "2023-06-16",
            "2023-06-20",
            "2023-06-21",
            "2023-06-22",
            "2023-06-23",
            "2023-06-26",
            "2023-06-27",
            "2023-06-28",
            "2023-06-29",
            "2023-06-30",
            "2023-07-03",
            "2023-07-05",
            "2023-07-06",
            "2023-07-07",
            "2023-07-10",
            "2023-07-11",
            "2023-07-12",
            "2023-07-13",
            "2023-07-14",
            "2023-07-17",
            "2023-07-18",
            "2023-07-19",
            "2023-07-20",
            "2023-07-21",
            "2023-07-24",
            "2023-07-25",
            "2023-07-26",
            "2023-07-27",
            "2023-07-28",
            "2023-07-31",
            "2023-08-01",
            "2023-08-02",
            "2023-08-03",
            "2023-08-04",
            "2023-08-07",
            "2023-08-08",
            "2023-08-09",
            "2023-08-10",
            "2023-08-11",
            "2023-08-14",
            "2023-08-15",
            "2023-08-16",
            "2023-08-17",
            "2023-08-18",
            "2023-08-21",
            "2023-08-22",
            "2023-08-23",
            "2023-08-24",
            "2023-08-25",
            "2023-08-28",
            "2023-08-29",
            "2023-08-30",
            "2023-08-31",
            "2023-09-01",
            "2023-09-05",
            "2023-09-06",
            "2023-09-07",
            "2023-09-08",
            "2023-09-11",
            "2023-09-12",
            "2023-09-13",
            "2023-09-14",
            "2023-09-15",
            "2023-09-18",
            "2023-09-19",
            "2023-09-20",
            "2023-09-21",
            "2023-09-22",
            "2023-09-25",
            "2023-09-26",
            "2023-09-27",
            "2023-09-28",
            "2023-09-29",
            "2023-10-02",
            "2023-10-03",
            "2023-10-04",
            "2023-10-05",
            "2023-10-06",
            "2023-10-09",
            "2023-10-10",
            "2023-10-11",
            "2023-10-12",
            "2023-10-13",
            "2023-10-16",
            "2023-10-17",
            "2023-10-18",
            "2023-10-19",
            "2023-10-20",
            "2023-10-23",
            "2023-10-24",
            "2023-10-25",
            "2023-10-26",
            "2023-10-27",
            "2023-10-30",
            "2023-10-31",
            "2023-11-01",
            "2023-11-02",
            "2023-11-03",
            "2023-11-06",
            "2023-11-07",
            "2023-11-08",
            "2023-11-09",
            "2023-11-10",
            "2023-11-13",
            "2023-11-14",
            "2023-11-15",
            "2023-11-16",
            "2023-11-17",
            "2023-11-20",
            "2023-11-21",
            "2023-11-22",
            "2023-11-24",
            "2023-11-27",
            "2023-11-28",
            "2023-11-29",
            "2023-11-30",
            "2023-12-01",
            "2023-12-04",
            "2023-12-05",
            "2023-12-06",
            "2023-12-07",
            "2023-12-08",
            "2023-12-11",
            "2023-12-12",
            "2023-12-13",
            "2023-12-14",
            "2023-12-15",
            "2023-12-18",
            "2023-12-19",
            "2023-12-20",
            "2023-12-21",
            "2023-12-22",
            "2023-12-26",
            "2023-12-27",
            "2023-12-28",
            "2023-12-29",
            "2024-01-02",
            "2024-01-03",
            "2024-01-04",
            "2024-01-05",
            "2024-01-08",
            "2024-01-09",
            "2024-01-10",
            "2024-01-11",
            "2024-01-12",
            "2024-01-16",
            "2024-01-17",
            "2024-01-18",
            "2024-01-19",
            "2024-01-22",
            "2024-01-23",
            "2024-01-24",
            "2024-01-25",
            "2024-01-26",
            "2024-01-29",
            "2024-01-30",
            "2024-01-31",
            "2024-02-01",
            "2024-02-02",
            "2024-02-05",
            "2024-02-06",
            "2024-02-07",
            "2024-02-08",
            "2024-02-09",
            "2024-02-12",
            "2024-02-13",
            "2024-02-14",
            "2024-02-15",
            "2024-02-16",
            "2024-02-20",
            "2024-02-21",
            "2024-02-22",
            "2024-02-23",
            "2024-02-26",
            "2024-02-27",
            "2024-02-28",
            "2024-02-29",
            "2024-03-01",
            "2024-03-04",
            "2024-03-05",
            "2024-03-06",
            "2024-03-07",
            "2024-03-08",
            "2024-03-11",
            "2024-03-12",
            "2024-03-13",
            "2024-03-14",
            "2024-03-15",
            "2024-03-18",
            "2024-03-19",
            "2024-03-20",
            "2024-03-21",
            "2024-03-22",
            "2024-03-25",
            "2024-03-26",
            "2024-03-27",
            "2024-03-28",
            "2024-04-01",
            "2024-04-02",
            "2024-04-03",
            "2024-04-04",
            "2024-04-05",
            "2024-04-08",
            "2024-04-09",
            "2024-04-10",
            "2024-04-11",
            "2024-04-12",
            "2024-04-15",
            "2024-04-16",
            "2024-04-17",
            "2024-04-18",
            "2024-04-19",
            "2024-04-22",
            "2024-04-23",
            "2024-04-24",
            "2024-04-25",
            "2024-04-26",
            "2024-04-29",
            "2024-04-30",
            "2024-05-01",
            "2024-05-02",
            "2024-05-03",
            "2024-05-06",
            "2024-05-07",
            "2024-05-08",
            "2024-05-09",
            "2024-05-10",
            "2024-05-13",
            "2024-05-14",
            "2024-05-15",
            "2024-05-16",
            "2024-05-17",
            "2024-05-20",
            "2024-05-21",
            "2024-05-22",
            "2024-05-23",
            "2024-05-24",
            "2024-05-28",
            "2024-05-29",
            "2024-05-30",
        ]
        end_date::Date = Date("2024-05-30")
        flow_count::Dict{String,Int} = Dict{String,Int}()
        flow_stocks::Dict{String,Vector{DayData}} = Dict{String,Vector{DayData}}()
        indicator_cache::Dict{String,Vector{Float32}} = Dict{String,Vector{Float32}}()
        price_cache::Dict{String,DataFrame} = Dict{String,DataFrame}()

        @test_throws r"ProcessingError" process_sort_node(
            sort_node,
            active_branch_mask,
            total_days,
            daily_weight,
            portfolio_history,
            date_range,
            end_date,
            flow_count,
            flow_stocks,
            indicator_cache,
            price_cache,
            Dict{String,Any}(),
            false,
            0,
        )
    end

    @testset "Sort Node Unknown Indicator Function Error Test" begin
        sort_node::Dict{String,Any} = Dict{String,Any}(
            "id" => "e4b10d49f656114f7f814a2784686765",
            "componentType" => "switch",
            "type" => "Sort",
            "name" => "SortBy: [S.M.A. - 1d]",
            "properties" => Dict{String,Any}(
                "sortby" => Dict{String,Any}(
                    "function" => "moving Average Price", # mis-spelled
                    "window" => "1",
                ),
                "select" => Dict{String,Any}("function" => "Top", "howmany" => "1"),
            ),
            "branches" => Dict{String,Any}(
                "Top-1" => [
                    Dict{String,Any}(
                        "id" => "790f0dd7a82328ac4c593492594bc3ea",
                        "componentType" => "task",
                        "type" => "stock",
                        "name" => "BUY TQQQ",
                        "properties" => Dict{String,Any}("symbol" => "TQQQ"),
                        "parentHash" => "a533604873cbe4f0523af58547683c45",
                        "hash" => "9eb5b1eb30a4dc65c86a88bf25e3fd37",
                    ),
                    Dict{String,Any}(
                        "id" => "3d2d27e6d1c3842457ccea617838db30",
                        "componentType" => "task",
                        "name" => "END OF SORT",
                        "properties" => Dict{String,Any}(),
                        "type" => "icon",
                        "hash" => "d0b88c354a25388177d718e51b4c2314",
                        "parentHash" => "9647a88d8e5fb8f5dfba475c6d3e6af5",
                    ),
                ],
            ),
            "path" => "e4b10d49f656114f7f814a2784686765",
            "parentHash" => "cfcd208495d565ef66e7dff9f98764da",
            "nodeChildrenHash" => "d13e0f4140a45101fcddcef732b5ff2f",
            "hash" => "7d86a816f426d0f1c2a0d682f7c39426",
        )

        active_branch_mask::BitVector = BitVector(trues(250))
        total_days::Int = 250
        daily_weight::Float32 = 1.0f0
        portfolio_history::Vector{DayData} = [DayData() for _ in 1:250]
        date_range::Vector{String} = [
            "2023-06-02",
            "2023-06-05",
            "2023-06-06",
            "2023-06-07",
            "2023-06-08",
            "2023-06-09",
            "2023-06-12",
            "2023-06-13",
            "2023-06-14",
            "2023-06-15",
            "2023-06-16",
            "2023-06-20",
            "2023-06-21",
            "2023-06-22",
            "2023-06-23",
            "2023-06-26",
            "2023-06-27",
            "2023-06-28",
            "2023-06-29",
            "2023-06-30",
            "2023-07-03",
            "2023-07-05",
            "2023-07-06",
            "2023-07-07",
            "2023-07-10",
            "2023-07-11",
            "2023-07-12",
            "2023-07-13",
            "2023-07-14",
            "2023-07-17",
            "2023-07-18",
            "2023-07-19",
            "2023-07-20",
            "2023-07-21",
            "2023-07-24",
            "2023-07-25",
            "2023-07-26",
            "2023-07-27",
            "2023-07-28",
            "2023-07-31",
            "2023-08-01",
            "2023-08-02",
            "2023-08-03",
            "2023-08-04",
            "2023-08-07",
            "2023-08-08",
            "2023-08-09",
            "2023-08-10",
            "2023-08-11",
            "2023-08-14",
            "2023-08-15",
            "2023-08-16",
            "2023-08-17",
            "2023-08-18",
            "2023-08-21",
            "2023-08-22",
            "2023-08-23",
            "2023-08-24",
            "2023-08-25",
            "2023-08-28",
            "2023-08-29",
            "2023-08-30",
            "2023-08-31",
            "2023-09-01",
            "2023-09-05",
            "2023-09-06",
            "2023-09-07",
            "2023-09-08",
            "2023-09-11",
            "2023-09-12",
            "2023-09-13",
            "2023-09-14",
            "2023-09-15",
            "2023-09-18",
            "2023-09-19",
            "2023-09-20",
            "2023-09-21",
            "2023-09-22",
            "2023-09-25",
            "2023-09-26",
            "2023-09-27",
            "2023-09-28",
            "2023-09-29",
            "2023-10-02",
            "2023-10-03",
            "2023-10-04",
            "2023-10-05",
            "2023-10-06",
            "2023-10-09",
            "2023-10-10",
            "2023-10-11",
            "2023-10-12",
            "2023-10-13",
            "2023-10-16",
            "2023-10-17",
            "2023-10-18",
            "2023-10-19",
            "2023-10-20",
            "2023-10-23",
            "2023-10-24",
            "2023-10-25",
            "2023-10-26",
            "2023-10-27",
            "2023-10-30",
            "2023-10-31",
            "2023-11-01",
            "2023-11-02",
            "2023-11-03",
            "2023-11-06",
            "2023-11-07",
            "2023-11-08",
            "2023-11-09",
            "2023-11-10",
            "2023-11-13",
            "2023-11-14",
            "2023-11-15",
            "2023-11-16",
            "2023-11-17",
            "2023-11-20",
            "2023-11-21",
            "2023-11-22",
            "2023-11-24",
            "2023-11-27",
            "2023-11-28",
            "2023-11-29",
            "2023-11-30",
            "2023-12-01",
            "2023-12-04",
            "2023-12-05",
            "2023-12-06",
            "2023-12-07",
            "2023-12-08",
            "2023-12-11",
            "2023-12-12",
            "2023-12-13",
            "2023-12-14",
            "2023-12-15",
            "2023-12-18",
            "2023-12-19",
            "2023-12-20",
            "2023-12-21",
            "2023-12-22",
            "2023-12-26",
            "2023-12-27",
            "2023-12-28",
            "2023-12-29",
            "2024-01-02",
            "2024-01-03",
            "2024-01-04",
            "2024-01-05",
            "2024-01-08",
            "2024-01-09",
            "2024-01-10",
            "2024-01-11",
            "2024-01-12",
            "2024-01-16",
            "2024-01-17",
            "2024-01-18",
            "2024-01-19",
            "2024-01-22",
            "2024-01-23",
            "2024-01-24",
            "2024-01-25",
            "2024-01-26",
            "2024-01-29",
            "2024-01-30",
            "2024-01-31",
            "2024-02-01",
            "2024-02-02",
            "2024-02-05",
            "2024-02-06",
            "2024-02-07",
            "2024-02-08",
            "2024-02-09",
            "2024-02-12",
            "2024-02-13",
            "2024-02-14",
            "2024-02-15",
            "2024-02-16",
            "2024-02-20",
            "2024-02-21",
            "2024-02-22",
            "2024-02-23",
            "2024-02-26",
            "2024-02-27",
            "2024-02-28",
            "2024-02-29",
            "2024-03-01",
            "2024-03-04",
            "2024-03-05",
            "2024-03-06",
            "2024-03-07",
            "2024-03-08",
            "2024-03-11",
            "2024-03-12",
            "2024-03-13",
            "2024-03-14",
            "2024-03-15",
            "2024-03-18",
            "2024-03-19",
            "2024-03-20",
            "2024-03-21",
            "2024-03-22",
            "2024-03-25",
            "2024-03-26",
            "2024-03-27",
            "2024-03-28",
            "2024-04-01",
            "2024-04-02",
            "2024-04-03",
            "2024-04-04",
            "2024-04-05",
            "2024-04-08",
            "2024-04-09",
            "2024-04-10",
            "2024-04-11",
            "2024-04-12",
            "2024-04-15",
            "2024-04-16",
            "2024-04-17",
            "2024-04-18",
            "2024-04-19",
            "2024-04-22",
            "2024-04-23",
            "2024-04-24",
            "2024-04-25",
            "2024-04-26",
            "2024-04-29",
            "2024-04-30",
            "2024-05-01",
            "2024-05-02",
            "2024-05-03",
            "2024-05-06",
            "2024-05-07",
            "2024-05-08",
            "2024-05-09",
            "2024-05-10",
            "2024-05-13",
            "2024-05-14",
            "2024-05-15",
            "2024-05-16",
            "2024-05-17",
            "2024-05-20",
            "2024-05-21",
            "2024-05-22",
            "2024-05-23",
            "2024-05-24",
            "2024-05-28",
            "2024-05-29",
            "2024-05-30",
        ]
        end_date::Date = Date("2024-05-30")
        flow_count::Dict{String,Int} = Dict{String,Int}()
        flow_stocks::Dict{String,Vector{DayData}} = Dict{String,Vector{DayData}}()
        indicator_cache::Dict{String,Vector{Float32}} = Dict{String,Vector{Float32}}()
        price_cache::Dict{String,DataFrame} = Dict{String,DataFrame}()

        @test_throws r"ServerError" process_sort_node(
            sort_node,
            active_branch_mask,
            total_days,
            daily_weight,
            portfolio_history,
            date_range,
            end_date,
            flow_count,
            flow_stocks,
            indicator_cache,
            price_cache,
            Dict{String,Any}(),
            false,
            0,
        )
    end
end
